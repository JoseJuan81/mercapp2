{"version":3,"sources":["reportWebVitals.js","context/User/UserContext.js","constant/user.js","helper/localStorage.js","context/User/userReducer.js","context/User/userWrapper.js","router/PrivateRoutes.js","constant/routes.js","context/Insumo/InsumoContext.js","components/NavBar/NavBar.js","helper/alphabeticSorting.js","helper/helperInsumoContext.js","context/Insumo/insumoReducer.js","context/Insumo/insumoWrapperContext.js","hooks/useIdbInsumos.js","services/indexDB/insumo.js","components/Genericos/PageTitle.js","components/Insumos/Insumo.js","components/Insumos/ListadoInsumos.js","components/Genericos/form/Searcher.js","components/Insumos/InsumosMenuMobile.js","components/Genericos/modal/BottomModal.js","hooks/useForm.js","components/Genericos/form/LabelsField.js","components/Genericos/form/InsumoForm.js","components/container/InsumosContainer.js","Pages/PaginaInsumos.js","Pages/PaginaInsumosAComprar.js","Pages/PaginaResumenCompras.js","router/AppRoutes.js","Pages/PaginaInicioSesion.js","Pages/PaginaRegistroUsuario.js","router/Main.js","MercApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserContext","createContext","userKey","user","getFromLocalStorage","key","ls","localStorage","getItem","JSON","parse","setInLocalStorage","data","dParsed","stringify","setItem","userReducer","state","action","fn","payload","logged","type","init","UserStore","children","useReducer","dispatch","useEffect","Provider","value","PrivateRoutes","isAuthenticated","Components","components","rest","location","pathname","component","props","to","inicioSesionPath","registroUsuarioPath","misInsumosPath","resumenDeComprasPath","InsumoContext","NavBar","useLocation","useState","isPaginaInsumo","setIsPaginaInsumo","total","useContext","className","alphabeticSorting","arr","sort","a","b","title","twoDecimals","round","updateItemInArrayById","insumo","indexInState","findIndex","equality","id","local","splice","insumoReducer","actionToExe","add","toogle","unChecked","setNewProperty","map","unSelectAllInsumos","search","searchVal","sch","toLowerCase","filter","i","includes","onSearch","undefined","labels","isEmpty","find","l","onFilter","remove","removeItemFromArrayByProp","update","dataSelected","InsumoStore","insumos","insumosCache","setInsumosCache","selectedInsumos","setSelectedInsumos","setTotal","insumoToUpdate","setInsumoToUpdate","length","reduce","acc","item","quantity","price","updateTotal","insumoContextProps","addingNewInsumo","newInsumo","deletingInsumo","insumoId","filteringInsumos","searchingInsumos","selectingAllInsumos","allSelected","setCheckAndQuantity","compose","selectAllInsumos","toogleCheck","updatedSelectedInsumos","checked","unSelectingAllInsumos","updatingInsumo","updatingInsumoInContext","updateQuantityInSelectedInsumo","idb","collectionName","this","db","collection","indexById","indexByTitle","indexByLabels","request","indexedDB","open","that","onupgradeneeded","insumosStore","result","createObjectStore","keyPath","autoIncrement","createIndex","unique","onsuccess","tx","transaction","objectStore","put","Promise","resolve","reject","oncomplete","onerror","err","getAll","ev","target","deleting","delete","updating","get","updateInsumo","useIdbInsumos","isMounted","useRef","insumosState","setState","loading","setLoading","dbLoaded","setDbLoaded","intervalId","clearCheckingDb","clearInterval","setNewInsumoInLocalDB","post","deleteInsumo","updateInsumoInLocalDB","updatedInsumo","current","setTimeout","setInterval","PageTitle","React","memo","console","log","InsumoEtiquetas","la","Math","random","InsumoTitle","InsumoPrice","currency","InsumoTotal","InsumoQuantity","q","setQ","data-jest","onClick","stopPropagation","onChange","InsumoActions","setToogle","s","Insumo","ins","ListadoInsumos","index","Searcher","placeholder","formState","setFormState","inputRef","focus","onSubmit","preventDefault","trim","select","ref","autoComplete","name","InsumosMenuMobile","toogleShowSearch","toogleShowFilter","openModal","BottomModal","show","opacity","setOpacity","top","setTop","useForm","initialState","requiredFields","invalidForm","setInvalidForm","handleInputChange","resetForm","isFalsy","some","identity","field","getPropertysValue","LabelsField","addLabels","labelsRef","inputValue","setInputValue","labelsState","setLabelsState","ind","onKeyDown","code","defaultInsumoForm","InsumoForm","closeModal","nameInput","isNotEmpty","isUpdating","createInsumo","setCurrency","setId","toString","slice","setQuantity","setPriceInNumber","Number","parsedInsumo","handleSubmit","useLayoutEffect","disabled","propType","PropType","func","isRequired","saveData","InsumosContainer","showSearch","setShowSearch","showFilter","setShowFilter","showModal","setShowModal","useCallback","PaginaInsumos","matching","dataInsumos","updatedInsumos","list","isChecked","decide","concat","el","matchWithSelectedInsumos","PaginaInsumosAComprar","PaginaResumenCompras","AppRoutes","exact","path","PaginaInicioSesion","history","useHistory","email","password","replace","required","maxLength","minLength","PaginaRegistroUsuario","Main","MercApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a957d53.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext } from 'react';\n\nexport const UserContext = createContext();\n","export const userKey = '[mercapp2]::user-data';\nexport const user = {\n    login: '[auth]::login',\n    logout: '[auth]::logout'\n}","\nexport const getFromLocalStorage = (key) => {\n    const ls = localStorage.getItem(key);\n    return JSON.parse(ls);\n}\n\nexport const setInLocalStorage = (key, data) => {\n    const dParsed = JSON.stringify(data);\n    localStorage.setItem(key, dParsed);\n}\n\nexport const removeFromLocalStorage = (key) => {\n    localStorage.removeItem(key);\n}\n\nexport const clearLocalStorage = () => {\n    localStorage.clear();\n}\n","import { user } from \"../../constant/user\";\n\nexport const userReducer = ( state, action ) => {\n\n    const opts = {\n        [user.login]: () => ({ ...action.payload, logged: true }),\n        [user.logout]: () => ({ logged: true })\n    }\n\n    const fn = opts[action.type];\n    return typeof fn === 'function' ? fn() : state;\n}","import { useEffect, useReducer, useState } from 'react';\n\nimport { userKey } from '../../constant/user';\nimport { getFromLocalStorage, setInLocalStorage } from '../../helper/localStorage';\n\nimport { UserContext } from './UserContext';\nimport { userReducer } from './userReducer';\n\nconst init = () => getFromLocalStorage( userKey ) || { logged: false };\n\nexport const UserStore = ({ children }) => {\n\n    const [user, dispatch] = useReducer( userReducer, {}, init );\n\n    useEffect( () => { setInLocalStorage( userKey, user ) }, [user]);\n\n    return (\n        <UserContext.Provider\n            value={{\n                user,\n                dispatch\n            }}\n        >\n            { children }\n        </UserContext.Provider>        \n    )\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoutes = ({\n    isAuthenticated,\n    components: Components,\n    ...rest\n}) => {\n\n    localStorage.setItem( 'lastpath', rest.location.pathname );\n\n    return (\n        <>\n            <Route\n                { ...rest }\n                component={\n                    props => (\n                        isAuthenticated\n                        ? <Components { ...props } />\n                        : <Redirect to=\"/inicio-sesion\" />\n                    )\n                }\n            />\n        </>\n    )\n}\n","export const inicioSesionPath = '/inicio-sesion';\nexport const registroUsuarioPath = '/registro-usuario';\nexport const listaDeComprasPath = '/lista-de-compras';\nexport const misInsumosPath = '/mis-insumos';\nexport const resumenDeComprasPath = '/mis-compras';","import { createContext } from 'react';\n\n/**\n * Crear contexto de Insumo\n */\nexport const InsumoContext = createContext(null);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { misInsumosPath } from '../../constant/routes';\nimport { InsumoContext } from '../../context/Insumo/InsumoContext';\n\nexport const NavBar = () => {\n\n    const { pathname } = useLocation();\n\n    const [isPaginaInsumo, setIsPaginaInsumo] = useState( pathname === misInsumosPath );\n\n    const { total } = useContext( InsumoContext );\n\n    useEffect( () => {\n\n        setIsPaginaInsumo( pathname === misInsumosPath );\n    }, [pathname])\n\n    return (\n        <div\n            className=\"\n                py-3 px-3\n                shadow\n                flex items-center justify-between\n                sticky top-0 z-10\n                w-full\n                bg-white\n            \"\n        >\n            <h1\n                className=\"\n                    flex-auto\n                    font-medium\n                    text-lime-500 text-base\n                \">\n                    MercApp2\n            </h1>\n\n            <div\n                className=\"\n                    flex items-center\n                \"\n            >\n                {total > 0 && isPaginaInsumo &&\n                    <Link\n                        to=\"/lista-de-compras\"\n                        className=\"\n                        py-2 px-3\n                        text-base text-lime-500\n                        bg-warmGray-100\n                        rounded\n                        icon-cart\n                        \"\n                    ></Link>\n                }\n\n                {total > 0 &&\n                    <div\n                        className=\"\n                            text-lg font-bold\n                            text-warmGray-600\n                            mx-4\n                        \"\n                    >\n                        <small className=\"text-xs\">S/.</small>\n                        <output>{ total }</output>\n                    </div>\n                }\n\n                <button\n                    type=\"button\"\n                    className=\"\n                        icon-menu\n                        py-2 px-3\n                        text-base text-warmGray-500\n                        bg-warmGray-100\n                    \"\n                ></button>\n            </div>\n\n        </div>\n    )\n}\n","export const alphabeticSorting = (arr) => {\n\n    return arr.sort((a, b) => {\n    \n        if (a.title <= b.title) return -1;\n    \n        return 1;\n    })\n\n};","import { compose, decide, equality, filter, find, findIndex, isEmpty, map, reduce, round, setNewProperty } from 'functionallibrary';\n\nimport { alphabeticSorting } from './alphabeticSorting';\nimport { getFromLocalStorage } from './localStorage';\n\n// import dataInsumos from '../fakeData/insumos';\n\nconst twoDecimals = round(2);\n\nexport const updateTotal = ( selectedInsumos ) => {\n\n    if ( selectedInsumos.length < 1) {\n        return 0;\n    }\n\n    return selectedInsumos.reduce((acc, item) => {\n        const { quantity, price } = item;\n        const totalInsumo = twoDecimals((quantity * price) || 0);\n\n        return (acc + totalInsumo);\n    }, 0);\n\n}\n\n/**\n * \n * @param {strin} id \n * @param {number} quantity \n * @param {Array} selectedInsumos \n */\nexport const updatingQuantity = ( id, quantity, selectedInsumos ) => {\n\n    const ind = findIndex(\n        equality('id', id),\n        selectedInsumos\n    );\n\n    const updateFn = (list, item) => {\n\n        if (id === item.id) {\n            return list.concat( setNewProperty('quantity', quantity, item) );\n        }\n\n        return list.concat(item);\n    }\n\n    return reduce(updateFn, [], selectedInsumos);\n}\n\n/**\n * \n * @param {Array} dataInsumos - insumos por servicio\n */\nexport const matchWithSelectedInsumos = ( dataInsumos ) => {\n\n    const dataSelected = getFromLocalStorage('selected-insumos');\n\n    if (!dataSelected || dataSelected.length === 0) {\n        return alphabeticSorting(dataInsumos);\n    }\n    \n    const reduceManage = (list, item) => {\n\n        const isChecked = find( equality('id', item.id), dataSelected );\n\n        const addChecked = () => list.concat(isChecked);\n        const addNotChecked = (el) => list.concat(el);\n\n        return decide(!!isChecked, addChecked, addNotChecked, item);\n\n    }\n\n    const updatedInsumos = reduce(reduceManage, [], dataInsumos);\n    return alphabeticSorting(updatedInsumos);\n}\n\nexport const selectAllInsumos = (state) => {\n\n    const setCheckAndQuantity = compose(\n        setNewProperty('checked', true),\n        setNewProperty('quantity', 1)\n    )\n    return map(setCheckAndQuantity, state);\n}\n\nexport const unSelectAllInsumos = (state) => {\n    const unChecked = setNewProperty('checked', false);\n    return map(unChecked, state);\n}\n\n/**\n * \n * @param {Array} state \n * @param {object} insumo \n */\nexport const updateItemInArrayById = (state, insumo) => {\n\n    const indexInState = findIndex(\n        equality('id', insumo.id),\n        state\n    )\n    const local = [...state];\n    local.splice(indexInState, 1, insumo);\n\n    return [...local];\n}\n\n/**\n * \n * @param {Array} state \n * @param {string} searchVal \n */\nexport const onSearch = (state, searchVal) => {\n\n    const sch = searchVal.toLowerCase();\n    return filter(\n        i => i.title.toLowerCase().includes( sch ),\n        state\n    );\n}\n\n/**\n * \n * @param {Array} state \n * @param {string} searchVal \n */\nexport const onFilter = (state, searchVal) => {\n\n    if(searchVal === '' || searchVal === null || searchVal === undefined) {\n        return state;\n    }\n\n    const sch = searchVal.toLowerCase();\n    return state.filter( (i) => {\n\n        const { labels } = i;\n\n        if ( isEmpty(labels) ) {\n            return false;\n        }\n\n        const exist = labels.find(l => l.toLowerCase().includes( sch ));\n        return !!exist;\n    });\n}\n\nexport const onReset = (initialState) => [...initialState];\n\nexport const addNewInsumo = (state, newInsumo) => {\n    return [newInsumo, ...state];\n}","import { removeItemFromArrayByProp } from \"functionallibrary\";\nimport { onFilter, onSearch, unSelectAllInsumos, updateItemInArrayById } from \"../../helper/helperInsumoContext\";\n\nexport const insumoReducer = (state, action) => {\n\n    const opts = {\n        add: () => [action.payload, ...state],\n        toogle: () => updateItemInArrayById(state, action.payload),\n        'quantity-change': () => updateItemInArrayById(state, action.payload),\n        'select-all': () => action.payload,\n        'unselect-all': () => unSelectAllInsumos( state ),\n        search: () => onSearch( state, action.payload ),\n        'restore-insumos': () => action.payload,\n        filter: () => onFilter( state, action.payload ),\n        remove: () => removeItemFromArrayByProp( 'id', action.payload, state),\n        update: () => updateItemInArrayById(state, action.payload),\n        'update-with-local-storage': () => action.payload,\n    }\n\n    const actionToExe = opts[action.type];\n\n    return typeof actionToExe === 'function' ? actionToExe() : state;\n}","import { useEffect, useState, useReducer } from 'react';\nimport { equality, find, removeItemFromArrayByProp } from 'functionallibrary';\n\nimport { InsumoContext } from './InsumoContext';\n\nimport { getFromLocalStorage, setInLocalStorage } from '../../helper/localStorage';\nimport {\n    updateItemInArrayById,\n    selectAllInsumos,\n    updateTotal,\n} from '../../helper/helperInsumoContext';\nimport { insumoReducer } from './insumoReducer';\n\nconst dataSelected = getFromLocalStorage('selected-insumos') || [];\n\n/**\n * @description funcion wrapper del contexto\n * @param {ReactComponent} children\n */\nexport const InsumoStore = ({ children }) => {\n\n    const [insumos, dispatch] = useReducer(insumoReducer, []);\n\n    const [insumosCache, setInsumosCache] = useState([]);\n    const [selectedInsumos, setSelectedInsumos] = useState( dataSelected );\n    const [total, setTotal] = useState(0);\n    const [insumoToUpdate, setInsumoToUpdate] = useState({});\n\n\n    /**\n     * @description: seleccionar o deseleccionar un insumo\n     * @param {object} newInsumo - insumo\n     */\n    const toogleCheck = (newInsumo) => {\n\n        // Actualizar insumos\n        dispatch({ type: 'toogle', payload: newInsumo });\n\n        // actualizar insumos seleccionados\n        const updatedSelectedInsumos = newInsumo.checked\n            ? [newInsumo, ...selectedInsumos]\n            : removeItemFromArrayByProp('id', newInsumo.id, selectedInsumos);\n        \n        setSelectedInsumos( [...updatedSelectedInsumos] );\n        setInLocalStorage('selected-insumos', updatedSelectedInsumos);\n\n    };\n\n    /**\n     * @description: actualiza cantidad del insumo\n     * @param {string} id \n     * @param {number} quantity \n     */\n    const updateQuantityInSelectedInsumo = ( id, quantity ) => {\n        const insumo = find(\n            equality('id', id),\n            insumos\n        )\n\n        dispatch({ type: 'quantity-change', payload: { ...insumo, quantity } });\n\n        const updatedSelectedInsumos = updateItemInArrayById( selectedInsumos, { ...insumo, quantity } );\n        setSelectedInsumos( updatedSelectedInsumos );\n        setInLocalStorage( 'selected-insumos', updatedSelectedInsumos );\n\n    };\n\n    /**\n     * @description: selecciona todos los insumos\n     * @param {array} insumos - arreglo de insumos\n     */\n    const selectingAllInsumos = () => {\n\n        const allSelected = selectAllInsumos(insumos);\n\n        dispatch({ type: 'select-all', payload: allSelected });\n        setSelectedInsumos([...allSelected]);\n        setInLocalStorage('selected-insumos', allSelected);\n\n    };\n    \n    /**\n     * @description: deselecciona todos los insumos\n     * @param {array} insumos - arreglo de insumos\n     */\n    const unSelectingAllInsumos = () => {\n\n        dispatch({ type: 'unselect-all' });\n        setSelectedInsumos( [] );\n        setInLocalStorage( 'selected-insumos', [] );\n\n    };\n\n    /**\n     * @description: Busca insumos usando el titulo\n     * @param {string} searchVal - criterio de busqueda\n     */\n    const searchingInsumos = (searchVal) => {\n\n        if(searchVal === '' || searchVal === null || searchVal === undefined) {\n\n            dispatch({ type: 'restore-insumos', payload: insumosCache });\n        } else {\n            \n            setInsumosCache( insumos );\n            dispatch({ type: 'search', payload: searchVal });\n        }\n        \n    };\n    \n    /**\n     * @description: Busca insumos usando los labels\n     * @param {string} searchVal - criterio de buscqueda\n     */\n    const filteringInsumos = (searchVal) => {\n        \n        if(searchVal === '' || searchVal === null || searchVal === undefined) {\n            \n            dispatch({ type: 'restore-insumos', payload: insumosCache });\n        } else {\n\n            setInsumosCache( insumos );\n            dispatch({ type: 'filter', payload: searchVal });\n        }\n\n    };\n\n\n    /**\n     * @description agregar insumo nuevo al contexto\n     * @param {object} newInsumo - nuevo insumo\n     */\n    const addingNewInsumo = (newInsumo) => {\n\n        dispatch({ type: 'add', payload: newInsumo });\n        // consumir servicio aqui\n    };\n    \n    /**\n     * \n     * @param {string} insumoId \n     */\n    const deletingInsumo = (insumoId) => {\n        \n        dispatch({ type: 'remove', payload: insumoId });\n        // consumir servicio aqui\n    };\n\n    /**\n     * @TODO - enviar objeto completo\n     * @param {strin} id \n     */\n    const updatingInsumo = ( id ) => {\n\n        const insumo = find( equality('id', id), insumos ) || {};\n        setInsumoToUpdate( insumo );\n    };\n\n    /**\n     * \n     * @param {object} insumo \n     */\n    const updatingInsumoInContext = (insumo) => {\n\n        dispatch({ type: 'update', payload: insumo });\n        // consumir servicios aqui\n    }\n\n    // Total de insumos seleccionados => price * quantity\n    useEffect( () => {\n\n        setTotal(\n            updateTotal( selectedInsumos )\n        );\n        \n    }, [selectedInsumos])\n\n    const insumoContextProps = {\n        addingNewInsumo,\n        deletingInsumo,\n        dispatch,\n        filteringInsumos,\n        insumos,\n        insumoToUpdate,\n        searchingInsumos,\n        selectedInsumos,\n        selectingAllInsumos,\n        setInsumoToUpdate,\n        total,\n        toogleCheck,\n        unSelectingAllInsumos,\n        updatingInsumo,\n        updatingInsumoInContext,\n        updateQuantityInSelectedInsumo,\n    }\n\n    return (\n        <InsumoContext.Provider\n            value={ insumoContextProps }\n        >\n            { children }\n\n        </InsumoContext.Provider>\n    )\n}","import { useEffect, useRef, useState } from 'react';\nimport Idb from '../services/indexDB/insumo';\n\nconst idb = new Idb('insumos');\n\nexport const useIdbInsumos = () => {\n\n    const isMounted = useRef(true);\n    const [insumosState, setState] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [dbLoaded, setDbLoaded] = useState( idb.db );\n\n    // Verifica cada segundo que IndexDB se establezca correctamente\n    let intervalId = null;\n\n    const checkDbLoad = () => {\n\n        intervalId = setInterval( () => {\n\n            if ( idb.db ) {\n                setDbLoaded( true );\n                clearCheckingDb();\n            }\n\n        }, 1000);\n\n    }\n\n    const clearCheckingDb = () => {\n        clearInterval(intervalId);\n    }\n\n    /**\n     * @description CRUD de Insumos\n     */\n    const setNewInsumoInLocalDB = async (newInsumo) => {\n        return await idb.post( newInsumo );\n    }\n\n    const deleteInsumo = async (insumoId) => {\n        return await idb.delete( insumoId );\n    }\n\n    const updateInsumoInLocalDB = async (updatedInsumo) => {\n        return await idb.update( updatedInsumo );\n    }\n\n\n    useEffect( () => {\n\n        return () => {\n            isMounted.current = false;\n        }\n\n    }, [])\n\n\n    useEffect( () => {\n\n        if (dbLoaded) {\n\n            setTimeout( () => {\n\n                    \n                idb.getAll()\n                .then( (result) => {\n\n                    if (isMounted.current) {\n                        \n                        setState(result);\n                        setLoading(false);\n                        \n                    }\n                    \n                })\n            }, 1000);\n\n        } else {\n            checkDbLoad();\n        }\n\n    }, [dbLoaded]);\n\n    return {\n        deleteInsumo,\n        insumos: insumosState,\n        loading,\n        setNewInsumoInLocalDB,\n        updateInsumoInLocalDB,\n    };\n}\n","\nclass IDB {\n\tconstructor( collectionName ) {\n\t\tthis.db = null;\n\t\tthis.collection = collectionName;\n\n\t\tthis.indexById = 'by_id';\n\t\tthis.indexByTitle = 'by_title';\n\t\tthis.indexByLabels = 'by_labels';\n\n\t\tconst request = indexedDB.open('mercapp2');\n\n\t\tconst that = this;\n\t\trequest.onupgradeneeded = function() {\n\t\t\tconst db = request.result;\n\t\t\tconst insumosStore = db.createObjectStore('insumos', {\n\t\t\t\tkeyPath: 'id',\n\t\t\t\tautoIncrement: true\n\t\t\t});\n\t\t\t\t\n\t\t\t// Crear indices\n\t\t\tinsumosStore.createIndex( that.indexById, 'id', { unique: true } );\n\t\t\tinsumosStore.createIndex( that.indexByTitle, 'title', { unique: false } );\n\t\t\tinsumosStore.createIndex( that.indexByLabels, 'labels', { unique: false } );\n\t\t}\n\n\t\trequest.onsuccess = function() {\n\t\t\tthat.db = request.result;\n\t\t};\n\n\t}\n\n\tpost( newInsumo ) {\n\t\tconst tx = this.db.transaction( this.collection, 'readwrite' );\n\t\tconst store = tx.objectStore( this.collection );\n\n\t\tstore.put( newInsumo );\n\n\t\treturn new Promise( (resolve, reject) => {\n\t\t\ttx.oncomplete = function() {\n\t\t\t\tresolve(true);\n\t\t\t};\n\n\t\t\ttx.onerror = function(err) {\n\t\t\t\treject('Error al registrar un insumo: ', err);\n\t\t\t};\n\t\t} )\n\t}\n\n\tgetAll() {\n\n\t\tconst tx = this.db.transaction( this.collection, 'readonly' );\n\t\tconst request = tx.objectStore( this.collection ).getAll();\n\n\t\treturn new Promise( (resolve, reject) => {\n\t\t\trequest.onsuccess = function(ev) {\n\t\t\t\tresolve( ev.target.result );\n\t\t\t};\n\n\t\t\trequest.onerror = function(err) {\n\t\t\t\treject( 'Error al obtener los insumos: ', err );\n\t\t\t};\n\t\t} )\n\t}\n\n\tdelete( id ) {\n\t\tconst tx = this.db.transaction( this.collection, 'readwrite' );\n\t\tconst deleting = tx.objectStore( this.collection ).delete(id);\n\n\t\treturn new Promise( (resolve, reject) => {\n\t\t\tdeleting.onsuccess = () => {\n\t\t\t\tresolve( true );\n\t\t\t}\n\n\t\t\tdeleting.onerror = () => {\n\t\t\t\treject(`Error eliminando el insumo ${id}`);\n\t\t\t}\n\t\t})\n\t}\n\n\tupdate( insumo ) {\n\t\tconst tx = this.db.transaction( this.collection, 'readwrite' );\n\t\t// coleccion\n\t\tconst objectStore = tx.objectStore( this.collection );\n\t\t// obtengo el insumo de la base de datos\n\t\tconst updating = objectStore.get(insumo.id);\n\n\t\treturn new Promise( (resolve, reject) => {\n\t\t\tupdating.onerror = (err) => {\n\t\t\t\treject(`Insumo con id: ${insumo.id}, no conseguido: ${err}`);\n\t\t\t}\n\n\t\t\t// obtencion exitosa del insumo de la base de datos\n\t\t\tupdating.onsuccess = () => {\n\t\t\t\t// actualizar insumo de la base de datos con la nueva informacion\n\t\t\t\tconst updateInsumo = objectStore.put( insumo );\n\n\t\t\t\t// operacion exitosa de actualizacion\n\t\t\t\tupdateInsumo.onsuccess = (ev) => {\n\t\t\t\t\tresolve( ev.target.result );\n\t\t\t\t}\n\n\t\t\t\tupdateInsumo.onerror = (err) => {\n\t\t\t\t\treject(`No fue posible actualizar el insumo con id ${insumo.id}: ${err}`);\n\t\t\t\t}\n\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport default IDB;\n","import React from 'react';\n\nexport const PageTitle = React.memo(({ title }) => {\n    console.log('PageTitle');\n    return (\n        <h1\n            className=\"\n                text-4xl font-bold text-warmGray-500\n                text-center\n                mb-4\n            \"\n        >{ title }</h1>\n    )\n})\n","import React, { useContext, useEffect, useState } from 'react';\nimport { round, setNewProperty } from 'functionallibrary';\nimport { InsumoContext } from '../../context/Insumo/InsumoContext';\n\nconst twoDecimals = round(2);\n\nconst InsumoEtiquetas = React.memo( ({ labels, checked }) => {\n    // console.log('10 ETIQUETAS');\n    return (\n        <ul className=\"flex flex-wrap\">\n\n            {\n                labels.map((la, i) => (\n                    <li\n                        key={`${la}-${i}-${Math.random}`}\n                        className={`\n                            bg-white\n                            text-xs ${ checked ? 'text-lime-700' : 'text-warmGray-800' }\n                            m-1 p-1\n                        `}\n                    >{ la }</li>\n                ))\n            }\n\n        </ul>\n    )\n})\n\nconst InsumoTitle = React.memo( ({ title, checked }) => {\n    // console.log('8 TITULO', title);\n    return (\n        <dt\n            className={`\n                duration-200\n                flex-auto\n                text-2xl font-bold ${checked ? 'text-lime-600' : 'text-warmGray-400'}\n                pr-6\n            `}\n        >\n            { title }\n        </dt>\n    )\n})\n\nconst InsumoPrice = React.memo( ({ currency, price }) => {\n    // console.log('13 PRECIO', price);\n    return (\n        <dt\n            className=\"\n                text-lg text-warmGray-400\n                font-semibold\n            \"\n        >\n            <small\n                className=\"text-xs font-light\"\n            >\n                { currency }\n            </small>\n            <span>{ price }</span>\n        </dt>\n    )\n})\n\nconst InsumoTotal = React.memo( ({ currency, total }) => {\n    // console.log('14 TOTAL', total);\n    return (\n        <dt\n            className=\"\n                text-2xl text-lime-500\n                font-bold\n            \"\n        >\n            <small className=\"text-xs font-normal mr-1\">total:</small>\n            <small className=\"text-base font-light\">{ currency }</small>\n            <span>{ total }</span>\n        </dt>\n    )\n})\n\nconst InsumoQuantity = React.memo( ({ setTotal, price, id }) => {\n    // console.log('11 CANTIDAD', id);\n\n    const { updateQuantityInSelectedInsumo } = useContext( InsumoContext );\n\n    const[q, setQ] = useState(1);\n\n    const handleMinusQuantity = (ev) => {\n        ev.stopPropagation();\n\n        const result = q - 1;\n        const quantity = result <= 0 ? 1 : result;\n\n        setQ(quantity);\n        updateQuantityInSelectedInsumo(id, quantity);\n        \n    }\n    \n    const handleAddQuantity = (ev) => {\n        ev.stopPropagation();\n\n        const quantity = q + 1;\n\n        setQ(quantity);\n        updateQuantityInSelectedInsumo(id, quantity);\n    }\n\n    useEffect( () => {\n\n        const total = twoDecimals( q * price );\n        setTotal( total );\n\n    }, [q, price])\n\n    return (\n        <div className=\"flex mx-2\">\n            <button\n                data-jest=\"minusQuantity\"\n                className=\"\n                    icon-minus\n                    bg-gray-100\n                    text-gray-500\n                    w-12 h-12\n                \"\n                onClick={ handleMinusQuantity }\n            ></button>\n            <input\n                className=\"\n                    mx-1\n                    w-10 h-12\n                    text-center text-xl font-medium text-warmGray-500\n                \"\n                type=\"number\"\n                value={ q }\n                onChange={ () => {} }\n            />\n            <button\n                data-jest=\"addQuantity\"\n                className=\"\n                    icon-plus\n                    bg-lime-50\n                    text-lime-500\n                    w-12 h-12\n                \"\n                onClick={ handleAddQuantity }\n            ></button>\n        </div>\n    )\n})\n\nconst InsumoActions = React.memo( ({ id }) => {\n    // console.log('9 ACTIONS', id);\n\n    const { deletingInsumo, updatingInsumo } = useContext( InsumoContext );\n\n    const [toogle, setToogle] = useState(false);\n\n    const handleClick = ev => {\n        ev.stopPropagation();\n\n        setToogle( s => !s );\n    }\n\n    const handleDeleteInsumo = (ev) => {\n        ev.stopPropagation();\n        \n        deletingInsumo( id );\n    }\n    \n    const handleUpdateInsumo = (ev) => {\n        ev.stopPropagation();\n\n        updatingInsumo( id );\n\n    }\n\n    return (\n        <div\n            className={`\n                absolute right-0\n                pr-2\n                bg-warmGray-100\n                flex\n                transform ${ toogle ? 'translate-x-0' : 'translate-x-24' }\n                border border-solid ${ toogle ? 'border-warmGray-200' : 'border-white' }\n                rounded-l-full\n                duration-300\n            `}\n        >\n            <button\n                type=\"button\"\n                className={`\n                    bg-white\n                    icon-circle-left\n                    flex items-center justify-center\n                    text-warmGray-500\n                    text-2xl\n                    transform ${toogle ? 'rotate-180' : 'rotate-0'}\n                    w-10\n                    ${ toogle && 'rounded-full' }\n                    border border-solid ${ toogle ? 'border-warmGray-200' : 'border-white' }\n                    duration-300\n                `}\n                onClick= { handleClick }\n            ></button>\n\n            <div\n                className=\"\n                    grid grid-cols-2 gap-2\n                \"\n            >\n                <button\n                    type=\"button\"\n                    className=\"\n                        icon-pencil\n                        px-2\n                        text-2xl text-blue-500\n                    \"\n                    onClick={ handleUpdateInsumo }\n                ></button>\n                <button\n                    type=\"button\"\n                    className=\"\n                        icon-bin2\n                        px-2\n                        text-2xl text-rose-500\n                    \"\n                    onClick={ handleDeleteInsumo }\n                ></button>\n            </div>\n\n        </div>\n    )\n})\n\nexport const Insumo = React.memo( ({ insumo }) => {\n    // console.log('7 INSUMO', insumo.title);\n\n    const { checked, currency, labels, id, title, price } = insumo;\n\n    const { toogleCheck } = useContext( InsumoContext );\n\n    const [total, setTotal] = useState(insumo.price);\n\n\n    const handleClickOnInsumo = (ins) => {\n\n        toogleCheck(\n            setNewProperty('checked', !ins.checked, ins)\n        );\n    }\n\n    return (\n        <div\n            className={`\n                duration-200\n                rounded-lg ${checked && 'shadow-xl'}\n                border border-solid ${checked ? 'border-lime-400' : 'border-warmGray-300'}\n            `}\n            onClick={ () => handleClickOnInsumo(insumo) }\n        >\n\n            <dl className=\"flex p-2 overflow-hidden relative\">\n\n                <div className=\"flex flex-auto\">\n                    \n                    <InsumoTitle\n                        title={ title }\n                        checked={ checked }\n                    />\n\n                </div>\n\n                <InsumoActions\n                    id={ id }\n                />\n\n            </dl>\n\n            {labels && labels.length > 0 &&\n                <div\n                    className={`\n                        rounded-br-lg rounded-bl-lg\n                        ${ checked ? 'bg-lime-100' : 'bg-warmGray-100' }\n                        p-1\n                    `}\n                >\n                    <InsumoEtiquetas\n                        labels={ labels }\n                        checked={ checked }\n                    />\n                </div>\n            }\n\n            {checked &&\n                <div className=\"flex justify-between items-center py-2 pr-4\">\n\n                    <InsumoQuantity\n                        setTotal={ setTotal }\n                        price={ price }\n                        id={ id }\n                    />\n    \n                    <InsumoPrice\n                        currency={ currency }\n                        price={ price }\n                        checked={ checked }\n                    />\n\n                    <InsumoTotal\n                        currency={ currency }\n                        total={ total }\n                    />\n\n                </div>\n            }\n            \n        </div>\n    )\n})\n","import React, { useContext } from 'react';\n\nimport { InsumoContext } from '../../context/Insumo/InsumoContext';\nimport { Insumo } from './Insumo';\n\nexport const ListadoInsumos = () => {\n    // console.log('5 LISTADO INSUMOS');\n\n    const { insumos } = useContext( InsumoContext );\n\n    if ( !insumos || insumos.length === 0 ) {\n        return (\n            <h1\n                className=\"font-bold text-2xl text-center text-warmGray-500\"\n            >\n                Debe agregrar insumos :)\n            </h1>\n        )\n    }\n\n    return (\n        <ul className=\"\">\n            {\n                insumos.map((i, index) => (\n\n                    <li\n                        className=\"mb-3\"\n                        key={ `${i.title}-${index}-${Math.random}`}\n                    >\n                        <Insumo\n                            insumo={ i }\n                        />\n                    </li>\n\n                ))\n            }\n        </ul>\n    )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { isEmpty } from 'functionallibrary';\n\nexport const Searcher = ({ onSearch, placeholder }) => {\n    console.log('4 SEARCHER');\n\n    const [formState, setFormState] = useState({\n        search: ''\n    });\n\n    const inputRef = useRef();\n\n    const handleFormSubmit = (ev) => {\n        ev.preventDefault();\n\n        onSearch(formState.search.trim());\n\n        inputRef.current.select();\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setFormState({\n            ...formState,\n            [target.name]: target.value\n        });\n\n        if (isEmpty(target.value)) {\n\n            onSearch(target.value);\n\n        }\n    }\n\n    useEffect(() => {\n\n        inputRef.current.focus();\n\n    }, [])\n\n    return (\n        <form\n            className=\"h-12 flex-auto\"\n            onSubmit={ handleFormSubmit }\n        >\n            <input\n                className=\"\n                    h-full w-full\n                    rounded\n                    border border-solid border-warmGray-300\n                    px-2\n                \"\n                ref={ inputRef }\n                type=\"search\"\n                autoComplete=\"off\"\n                placeholder={ placeholder }\n                name=\"search\"\n                onChange={ handleInputChange }\n                value={ formState.search }\n            />\n        </form>\n    )\n}\n","import React, { useContext } from 'react';\nimport { InsumoContext } from '../../context/Insumo/InsumoContext';\n\nexport const InsumosMenuMobile = React.memo(({ toogleShowSearch, toogleShowFilter, openModal }) => {\n    console.log('6 MENU MOVIL');\n\n    const { selectingAllInsumos, unSelectingAllInsumos } = useContext( InsumoContext );\n    \n    return (\n        <div\n            className=\"\n                grid grid-cols-5\n                fixed bottom-0 left-0\n                w-full h-16\n                bg-white\n                border-t border-solid border-warmGray-300\n                shadow-inner\n            \"\n        >\n            \n            <button\n                className=\"icon-checkmark text-lime-400 text-3xl\"\n                title=\"Seleccionar todo\"\n                onClick={ selectingAllInsumos }\n            ></button>\n\n            <button\n                className=\"\n                    icon-checkmark\n                    text-3xl text-warmGray-300\n                \"\n                title=\"Deseleccionar todo\"\n                onClick={ unSelectingAllInsumos }\n                ></button>\n\n            <button\n                className=\"icon-search text-3xl text-rose-500\"\n                title=\"Buscar\"\n                onClick={ toogleShowSearch }\n            ></button>\n\n            <button\n                className=\"icon-filter text-3xl text-blue-400\"\n                title=\"Filtrar\"\n                onClick={ toogleShowFilter }\n            ></button>\n\n            <button\n                className=\"\n                    icon-plus\n                    text-3xl text-lime-600\n                \"\n                title=\"Agregar\"\n                onClick={ openModal }\n            ></button>\n\n        </div>\n    )\n})\n","import React, { useEffect, useState } from 'react';\n\nexport const BottomModal = ({children, show}) => {\n\n    const [opacity, setOpacity] = useState(false);\n    const [top, setTop] = useState(false);\n\n    useEffect( () => {\n\n        if (show) {\n\n            setTop(true);\n            setTimeout( () => {\n    \n                setOpacity(true);\n                \n            }, 200);\n            \n        } else {\n            \n            setOpacity(false);\n            setTimeout( () => {\n    \n                setTop(false);\n                \n            }, 100);\n\n        }\n\n\n    }, [show])\n\n    return (\n        <div\n            className={`\n                fixed ${top ? 'top-0' : 'top-full'} left-0 z-20\n                w-full h-full\n                ${opacity ? 'bg-opacity-50' : 'bg-opacity-0'} bg-black\n                flex items-end justify-center\n                pt-8 px-4\n                duration-200\n            `}\n        >\n            <div\n                className=\"\n                    bg-white\n                    p-4\n                    rounded-t-2xl\n                    w-full h-auto\n                \"\n            >\n                { children }\n            </div>\n        </div>\n    )\n}\n","import { useEffect, useState } from 'react';\n\nimport { getPropertysValue, identity, isEmpty, map, some } from 'functionallibrary';\n\nexport const useForm = (initialState = {}, requiredFields = []) => {\n\n    const [formState, setFormState] = useState(initialState);\n    const [invalidForm, setInvalidForm] = useState(true);\n\n    const handleInputChange = ({ target }) => {\n\n        setFormState({\n            ...formState,\n            [target.name]: target.value\n        })\n\n    }\n\n    const resetForm = () => {\n\n        setFormState(initialState);\n    }\n\n    // Validacion de formulario con campos requeridos\n    useEffect( () => {\n\n        if ( isEmpty(requiredFields) ) {\n\n            setInvalidForm( false );\n\n        } else {\n\n            const checkingFields = field => isEmpty( getPropertysValue( field, formState ) );\n    \n            const isFalsy = some(\n                identity,\n                map( checkingFields, requiredFields )\n            );\n    \n            setInvalidForm( isFalsy );\n\n        }\n\n    }, [formState, requiredFields]);\n\n    return {\n        formState,\n        handleInputChange,\n        resetForm,\n        invalidForm\n    }\n}\n","import React, { useRef, useState } from 'react';\n\nexport const LabelsField = ({ labels = [], addLabels }) => {\n\n    const labelsRef = useRef();\n\n    const [inputValue, setInputValue] = useState( '' );\n    const [labelsState, setLabelsState] = useState( labels );\n\n    const handleAddLabel = (ev) => {\n        ev.stopPropagation();\n\n        if (ev.code === 'Tab' && inputValue) {\n            \n            setLabelsState( l => [inputValue, ...l] );\n            addLabels({\n                target: {\n                    name: 'labels',\n                    value: [inputValue, ...labelsState]\n                }\n            });\n\n            labelsRef.current.focus();\n            setInputValue('');\n        }\n        \n    }\n\n    const handleInputOnChange = ({ target }) => {\n\n        setInputValue(\n            target.value\n        )\n    }\n\n    return (\n        <div\n            className=\"\n                flex flex-wrap\n                w-full min-h-16\n                pl-2 pt-2 pb-1 mb-4\n                border border-solid border-warmGray-300\n                rounded\n            \"\n        >\n            \n            { labelsState && labelsState.length > 0 && \n                <div className=\"flex flex-wrap\">\n                    {\n                        labelsState.map( (l, ind) => (\n                            <span\n                                className=\"\n                                    relative\n                                    flex items-center\n                                    text-warmGray-600\n                                \"\n                            >\n                                <span\n                                    key={ `${l}-${ind}` }\n                                    className=\"\n                                        rounded\n                                        bg-warmGray-200\n                                        m-1 p-1\n                                    \"\n                                >{ l }</span>\n                                <button\n                                    className=\"\n                                        icon-cancel-circle\n                                        absolute -top-1 -right-1\n                                        text-rose-300\n                                    \"\n                                ></button>\n                            </span>\n                        ) )\n                    }\n                </div>\n            }\n\n            <input\n                type=\"text\"\n                className={`\n                    flex-auto\n                    pl-4\n                    min-h-12\n                    ${ labelsState && labelsState.length > 0 && 'ml-3 mt-2' }\n                `}\n                ref={ labelsRef }\n                autoComplete=\"off\"\n                placeholder=\"Etiquetas con tab...\"\n                onKeyDown={ handleAddLabel }\n                onChange={ handleInputOnChange }\n                value={ inputValue }\n            />\n        </div>\n    )\n}\n","import React, { useContext, useLayoutEffect, useRef, useState } from 'react';\nimport { compose, isNotEmpty, setNewProperty } from 'functionallibrary';\nimport PropType from 'prop-types';\n\nimport { useForm } from '../../../hooks/useForm';\n\nimport { InsumoContext } from '../../../context/Insumo/InsumoContext';\nimport { LabelsField } from './LabelsField';\nimport { useIdbInsumos } from '../../../hooks/useIdbInsumos';\n\nconst defaultInsumoForm = {\n    labels: [],\n    title: '',\n    price: 0\n}\n\n/**\n * \n * @param {function} closeModal - funcion para cerrar modal\n * @param {function} saveData - funcion para guardar nuevo insumo\n */\nexport const InsumoForm = ({ closeModal }) => {\n\n    const nameInput = useRef(null);\n\n    const { setNewInsumoInLocalDB, updateInsumoInLocalDB } = useIdbInsumos();\n\n    const { addingNewInsumo, insumoToUpdate, updatingInsumoInContext } = useContext( InsumoContext );\n\n    const [isUpdating] = useState( isNotEmpty( insumoToUpdate ) );\n\n    const initInsumo = isUpdating ? insumoToUpdate : defaultInsumoForm;\n\n    const { formState, handleInputChange, invalidForm } = useForm(initInsumo, ['title']);\n\n\n    const createInsumo = async () => {\n        const setCurrency = setNewProperty( 'currency', 'S/.' );\n        const setId = setNewProperty( 'id', Math.random().toString(16).slice(2) );\n        const setQuantity = setNewProperty( 'quantity', 1 );\n        const setPriceInNumber = setNewProperty('price', Number(formState.price));\n\n        const parsedInsumo = compose( setCurrency, setId, setQuantity, setPriceInNumber )(formState);\n\n        addingNewInsumo( parsedInsumo );\n        await setNewInsumoInLocalDB( parsedInsumo );\n    }\n\n    const updateInsumo = async () => {\n        updatingInsumoInContext( formState );\n        await updateInsumoInLocalDB( formState );\n    }\n\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n\n        if ( isUpdating ) {\n\n            updateInsumo();\n        } else {\n\n            createInsumo();\n        }\n\n        closeModal();\n    };\n\n    useLayoutEffect( () => {\n\n        nameInput.current.focus();\n\n    }, []);\n\n    return (\n        <>\n        <h1\n            className=\"\n                text-2xl font-normal text-warmGray-500\n                pt-2 mb-4\n            \"\n        >Agregar nuevo insumo</h1>\n\n        <form\n            className=\"\n                pt-4 pb-20\n                flex flex-col\n                relative\n                w-full h-full\n            \"\n            onSubmit={ handleSubmit }\n        >\n\n            <input\n                autoComplete=\"off\"\n                ref={ nameInput }\n                className=\"\n                    w-full h-16\n                    pl-2 mb-4\n                    border border-solid border-warmGray-300\n                    rounded\n                \"\n                placeholder=\"Nombre\"\n                name=\"title\"\n                value={ formState.title }\n                onChange={ handleInputChange }\n            />\n\n            <input\n                autoComplete=\"off\"\n                className=\"\n                    w-full h-16\n                    pl-2 mb-4\n                    border border-solid border-warmGray-300\n                    rounded\n                \"\n                type=\"number\"\n                placeholder=\"Precio\"\n                name=\"price\"\n                value={ formState.price }\n                onChange={ handleInputChange }\n            />\n\n            <LabelsField\n                labels={ formState.labels }\n                addLabels={ handleInputChange }\n            />\n\n            <div\n                className=\"\n                    absolute bottom-0 left-0\n                    w-full\n                    py-2\n                    flex items-center justify-center\n                \"\n            >\n                <button\n                    className=\"\n                        flex-auto\n                        py-4 px-2 mr-2\n                        bg-rose-300\n                        text-rose-800 font-bold\n                    \"\n                    type=\"button\"\n                    onClick={ closeModal }\n                >Cancelar</button>\n                <button\n                    disabled={ invalidForm }\n                    className={`\n                        flex-auto\n                        py-4 px-2 ml-2\n                        bg-lime-400\n                        text-lime-800 font-bold\n                        ${invalidForm && 'opacity-30'}\n                    `}\n                >Guardar</button>\n            </div>\n\n        </form>\n        </>\n    )\n}\n\nInsumoForm.propType = {\n    closeModal: PropType.func.isRequired,\n    saveData: PropType.func.isRequired,\n}","import React, { useCallback, useContext, useEffect, useState } from 'react';\n\nimport { ListadoInsumos } from '../Insumos/ListadoInsumos';\nimport { Searcher } from '../Genericos/form/Searcher';\nimport { InsumosMenuMobile } from '../Insumos/InsumosMenuMobile';\n\nimport { BottomModal } from '../Genericos/modal/BottomModal';\nimport { InsumoForm } from '../Genericos/form/InsumoForm';\nimport { InsumoContext } from '../../context/Insumo/InsumoContext';\nimport { isEmpty } from 'functionallibrary';\n\n\nexport const InsumosContainer = () => {\n    // console.log('3 INSUMO CONTAINER');\n\n    // Contexto de Insumo\n    const {\n        filteringInsumos,\n        insumoToUpdate,\n        searchingInsumos,\n        setInsumoToUpdate,\n    } = useContext( InsumoContext );\n\n    // variables para mostrar u ocultar buscadores\n    const [showSearch, setShowSearch] = useState(false);\n    const [showFilter, setShowFilter] = useState(false);\n\n    // variables para mostrar u ocular modal\n    const [showModal, setShowModal] = useState(false);\n\n    // accion para cambiar valor de variables para mostrar u ocultar buscadores y modal\n    const toogleShowSearch = useCallback( () => {\n\n        setShowFilter(() => false);\n        setShowSearch(s => !s);\n\n    }, [setShowFilter, setShowSearch]);\n\n    // accion para cambiar valor de variables para mostrar u ocultar buscadores y modal\n    const toogleShowFilter = useCallback( () => {\n\n        setShowSearch(() => false);\n        setShowFilter(s => !s);\n\n    }, [setShowSearch, setShowFilter]);\n\n    const openModal = useCallback( () => setShowModal( true ), [setShowModal]);\n    const closeModal = useCallback( () => {\n\n        setShowModal( false );\n        setInsumoToUpdate();\n    }, [setShowModal]);\n\n    useEffect( () => {\n\n        setShowModal( !isEmpty( insumoToUpdate ) );\n    }, [insumoToUpdate]);\n\n    return (\n        <>\n            <div\n                className={`\n                    flex\n                    mb-4\n                    overflow-hidden\n                    ${showSearch || showFilter ? 'max-h-20' : 'max-h-0'}\n                    duration-300\n                `}\n            >\n                {\n                    showSearch && <Searcher\n                        onSearch={ searchingInsumos }\n                        placeholder=\"Buscar insumo\"\n                    />\n                }\n                {\n                    showFilter && <Searcher\n                        onSearch={ filteringInsumos }\n                        placeholder=\"Filtrar insumo\"\n                    />\n                }\n\n            </div>\n\n            <ListadoInsumos />\n\n            <InsumosMenuMobile\n                toogleShowSearch={ toogleShowSearch }\n                toogleShowFilter={ toogleShowFilter }\n                openModal={ openModal }\n            />\n\n\n            { showModal &&\n            \n                <BottomModal show={ showModal } >\n\n                    <InsumoForm closeModal={ closeModal } />\n\n                </BottomModal>\n\n            }\n\n        </>\n    )\n}\n","import React, { useContext, useEffect } from 'react';\n\n\nimport { useIdbInsumos } from '../hooks/useIdbInsumos';\n\nimport { PageTitle } from '../components/Genericos/PageTitle';\nimport { InsumosContainer } from '../components/container/InsumosContainer';\n\nimport { matchWithSelectedInsumos } from '../helper/helperInsumoContext';\nimport { InsumoContext } from '../context/Insumo/InsumoContext';\n\n\nexport const PaginaInsumos = () => {\n    console.log('2 PAGINA INSUMOS');\n\n    const { insumos, loading } = useIdbInsumos();\n\n    const { dispatch } = useContext( InsumoContext );\n\n    useEffect(() => {\n\n        if (!loading) {\n\n            const matching = matchWithSelectedInsumos( insumos );\n            dispatch({ type: 'update-with-local-storage', payload: matching });\n        }\n        \n    }, [loading])\n\n    return (\n        <div className=\"px-2 pb-20 mt-4 relative\">\n            \n            <PageTitle title=\"Insumos\" />\n\n            {\n                loading\n                    ? <h1>Cargando...</h1>\n                    : <InsumosContainer />\n            }\n            \n            \n        </div>\n    )\n}\n","import React, { useContext } from 'react';\n\nimport { PageTitle } from '../components/Genericos/PageTitle';\nimport { Insumo } from '../components/Insumos/Insumo';\nimport { InsumoContext } from '../context/Insumo/InsumoContext';\n\nexport const PaginaInsumosAComprar = () => {\n\n    const { selectedInsumos } = useContext( InsumoContext );\n    return (\n        <div>\n            <div className=\"px-2 pb-20 mt-4 relative\">\n            \n            <PageTitle title=\"Lista de compras\" />\n\n            <ul className=\"\">\n            {\n                selectedInsumos.map((i, index) => (\n\n                    <li\n                        className=\"mb-3\"\n                        key={ `${i.title}-${index}-${Math.random}`}\n                    >\n                        <Insumo\n                            insumo={ i }\n                        />\n                    </li>\n\n                ))\n            }\n        </ul>\n            \n            \n        </div>\n            <h1>Estos son los insumos a comprar</h1>\n            <ul>\n                <li>Crear base de datos: lista de compras</li>\n                <li>Crear objeto lista de compras</li>\n                <li>Al modificar un isumo solo afecta al insumo del objeto \"lista de compras\"</li>\n                <li>Se puede modificar: cantidad y precios</li>\n                <li>Agregar estado para indicar si fue comprado o no</li>\n                <li>Cuando se compra alguno se habilita el boton de Compra parcial para generar una factura: los productos comprados no se muestran mas</li>\n                <li>Cuando se compras todos se habilita el boton de Compra para generar factura</li>\n            </ul>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const PaginaResumenCompras = () => {\n    return (\n        <div>\n            Aqui se muestran todas las compras realizadas incluyendo las parciales\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { NavBar } from '../components/NavBar/NavBar';\nimport { InsumoStore } from '../context/Insumo/insumoWrapperContext';\nimport { PaginaInsumos } from '../Pages/PaginaInsumos';\nimport { PaginaInsumosAComprar } from '../Pages/PaginaInsumosAComprar';\n\nimport { listaDeComprasPath, misInsumosPath, resumenDeComprasPath } from '../constant/routes';\nimport { PaginaResumenCompras } from '../Pages/PaginaResumenCompras';\n\nexport const AppRoutes = () => {\n    return (\n        <InsumoStore>\n            <NavBar />\n\n            <div>\n                <Switch>\n\n                    <Route exact path={ resumenDeComprasPath }>\n                        <PaginaResumenCompras />\n                    </Route>\n\n                    <Route exact path={ listaDeComprasPath }>\n                        <PaginaInsumosAComprar />\n                    </Route>\n\n                    <Route exact path={ misInsumosPath }>\n                        <PaginaInsumos />\n                    </Route>\n\n                    <Redirect to={ resumenDeComprasPath } />\n\n                </Switch>\n            </div>\n        </InsumoStore>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { misInsumosPath, registroUsuarioPath } from '../constant/routes';\nimport { user } from '../constant/user';\nimport { UserContext } from '../context/User/UserContext';\nimport { useForm } from '../hooks/useForm';\n\nexport const PaginaInicioSesion = () => {\n\n    const { dispatch } = useContext( UserContext );\n\n    const history = useHistory();\n\n    const { formState, handleInputChange, invalidForm } = useForm({\n        email: '',\n        password: ''\n    }, ['email', 'password']);\n\n    const handleLogIn = (ev) => {\n        ev.preventDefault();\n        \n        dispatch({ type: user.login, payload: formState });\n        history.replace( misInsumosPath );\n    }\n\n    return (\n        <div\n            className=\"\n                flex items-center justify-center\n                h-screen\n            \"\n        >\n            <form\n                className=\"\n                    flex flex-col\n                    py-6 px-4 mx-4\n                    w-full\n                    border border-solid border-warmGray-200\n                    rounded-xl shadow-lg\n                \"\n                onSubmit={ handleLogIn }\n            >\n                <h1\n                    className=\"\n                        text-4xl font-semibold text-lime-500 text-center\n                        pb-4 mb-2\n                    \"\n                >\n                    MercApp 2\n                </h1>\n\n                <input\n                    required\n                    className=\"\n                        w-full h-16\n                        border border-solid border-warmGray-200\n                        rounded\n                        pl-4 pr-2 mb-4\n                    \"\n                    placeholder=\"Introduzca su correo\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={ formState.email }\n                    onChange={ handleInputChange }\n                />\n                <input\n                    required\n                    className=\"\n                        w-full h-16\n                        border border-solid border-warmGray-200\n                        rounded\n                        pl-4 pr-2 mb-4\n                    \"\n                    placeholder=\"Introduzca su contrasena\"\n                    type=\"password\"\n                    name=\"password\"\n                    maxLength={ 16 }\n                    minLength={ 6 }\n                    value={ formState.password }\n                    onChange={ handleInputChange }\n                />\n                <button\n                    disabled={ invalidForm }\n                    className={`\n                        w-full h-16\n                        bg-lime-200\n                        text-lime-700 text-xl\n                        rounded\n                        ${invalidForm && 'opacity-30'}\n                    `}\n                >\n                    Inicia sesion\n                </button>\n\n                <Link\n                    className=\"\n                        bg-warmGray-100\n                        text-center text-warmGray-700\n                        py-2 mt-4\n                    \"\n                    to={ registroUsuarioPath }\n                >Registrarme</Link>\n            </form>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { inicioSesionPath } from '../constant/routes';\n\nexport const PaginaRegistroUsuario = () => {\n    return (\n        <div>\n            <h1>Pagina para Registro usuario</h1>\n\n            <button\n                type=\"button\"\n            >\n                Registrate\n            </button>\n\n            <Link to={ inicioSesionPath } >Inicar sesion</Link>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Route,\n    Switch,\n} from 'react-router-dom';\n\nimport { PrivateRoutes } from './PrivateRoutes';\nimport { AppRoutes } from './AppRoutes';\nimport { PaginaInicioSesion } from '../Pages/PaginaInicioSesion';\nimport { PaginaRegistroUsuario } from '../Pages/PaginaRegistroUsuario';\n\nimport { inicioSesionPath, registroUsuarioPath } from '../constant/routes';\nimport { UserContext } from '../context/User/UserContext';\nimport { UserStore } from '../context/User/userWrapper';\n\nexport const Main = () => {\nconsole.log('1 MAIN');\n\n    const { user } = useContext( UserContext );\n\n    return (\n        <div className=\"font-poppins\">\n\n            <Router>\n                    <Switch>\n\n                        <Route\n                            exact\n                            path={ inicioSesionPath }\n                            component={\n                                props => (\n                                    !user.logged\n                                    ? <PaginaInicioSesion props={ props } />\n                                    : <Redirect to=\"/\" />\n                                )\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path={ registroUsuarioPath }\n                            component={\n                                props => (\n                                    !user.logged\n                                    ? <PaginaRegistroUsuario props={ props } />\n                                    : <Redirect to=\"/\" />\n                                )\n                            }\n                        />\n\n                        <PrivateRoutes\n                            path=\"/\"\n                            isAuthenticated={ user.logged }\n                            components={ AppRoutes }\n                        />\n\n                    </Switch>\n\n            </Router>\n\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { UserContext } from './context/User/UserContext';\nimport { UserStore } from './context/User/userWrapper'\nimport { Main } from './router/Main';\n\nexport const MercApp = () => {\n\n    return (\n        <UserStore>\n            <Main />\n        </UserStore>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport { MercApp } from './MercApp';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<MercApp />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}